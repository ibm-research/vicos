akka {
  event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "ERROR"

  actor {
    provider = "akka.remote.RemoteActorRefProvider"
    default-mailbox.mailbox-type = "com.ibm.vicos.common.PriorityMessageMailbox"
    default-dispatcher.throughput = 10
    default-dispatcher.throughput = ${?VICOS_THROUGHPUT}
    serialization-bindings {
      "akka.actor.ActorRef" = proto
      "com.ibm.vicos.common.Messages" = proto
      "com.ibm.vicos.common.Operations" = proto
      "com.ibm.vicos.common.ADS" = proto
    }
  }

  remote {
    log-frame-size-exceeding = 1024kB
    log-buffer-size-exceeding = 50000
    log-sent-messages = off
    log-received-messages = off
    enabled-transports = ["akka.remote.netty.tcp"]
    netty.tcp {
      maximum-frame-size = 4096kB
      send-buffer-size = 8192kB
      receive-buffer-size = 8192kB
      hostname = "127.0.0.1"
      port = 0
      server-socket-worker-pool.pool-size-max = 16
      client-socket-worker-pool.pool-size-max = 16
    }
  }
}

vicos {
  system {
    name = "VICOSSystem"

    flowcontrol {
      // serverProtocol flow control
      max-operation-in-progress = 0
      max-operation-in-progress = ${?VICOS_MAX_OP_IN_PROGRESS}

      // serverProtocol stashes all invoke message when max length is reached
      pending-list-max-length = 128
    }

    operation {
      // availbe: commutative, compatible
      mode = "compatible"
      // vicos client automatically retries aborted operation if true
      retry-on-abort = true
    }


    signatures {
      // available types are RSA, DSA and HMAC, NONE
      type = "RSA"

      // if using HMAC signatures a shared key is needed
      // shared key has to be created initialliy and distributed among the clients
      // Key creating example:
      // $ openssl rand 16 -base64
      hmac.key = "SECRET_AS_BASE64_STRING"
    }

    hashing {
      // NOT IMPLEMENTED YET!!! currently using SHA1
      // available options MD5, SHA1, SHA256
      algorithm = "SHA1"
    }
  }

  // VICOS server
  server {
    name = "VICOSServer"
    hostname = "127.0.0.1"
    port = 2775
  }

}